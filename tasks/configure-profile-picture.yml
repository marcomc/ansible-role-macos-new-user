---
- name: apply random picture (if a picture path has not been specified)
  block:
  - name: Build list of available profile pictures
    shell: ls -1 {{ new_user_random_profile_pictures_path }}/ | grep -i '{{ new_user_profile_pictures_filter_formats }}'
    register: profile_pictures
    ignore_errors: yes
    delegate_to: localhost
    become: no

  - name: profile_pictures
    debug:
      var: profile_pictures
    when: verbose|bool

  - name: Copy random profile picture in the Pictures directory for the user '{{ new_user_username }}'
    copy:
      src: "{{ new_user_random_profile_pictures_path }}/{{ item }}"
      dest: "/Users/{{ new_user_username }}/Pictures/{{ item | basename }}"
      owner: "{{ new_user_username }}"
      mode: 0644
      group: 'staff'
    when: profile_pictures.stdout_lines != []
    with_random_choice: "{{ profile_pictures.stdout_lines }}"
    ignore_errors: yes
    register: random_profile_picture
    become: yes

  - name: random_profile_picture
    debug:
      var:  random_profile_picture
    when: verbose|bool
  # end block
  when:
    - new_user_profile_picture_path | length == 0
    - new_user_random_profile_picture|bool

- name: Copy profile picture into user's Pictures directory
  copy:
    src: "{{ new_user_profile_picture_path }}"
    dest: "{{ item }}"
    owner: "{{ new_user_username }}"
    mode: 0644
    group: 'staff'
  loop:
    - "/Users/{{ new_user_username }}/Pictures/{{ new_user_profile_picture_path | basename }}"
  ignore_errors: yes
  register: profile_picture
  when: new_user_profile_picture_path | length > 0
  become: yes

- name: profile_picture
  debug:
    var: profile_picture
  when: verbose|bool

- name: Create profile picture import file for the user '{{ username }}'.
  template:
    src: picture.dsimport.j2
    dest: "{{ item }}"
    mode: 0755
  vars:
    picture_path: "{{ profile_picture.results[0].dest|default(random_profile_picture.results[0].dest) }}"
    username: "{{ new_user_username }}"
  register: user_profile_picture_created
  loop:
    - "/Library/Caches/{{ username }}.picture.dsimport"
  when:
    - profile_picture is defined or random_profile_picture is defined
    - (profile_picture.results[0].dest is defined and profile_picture.results[0].dest | length > 0) or
      (random_profile_picture.results is defined and random_profile_picture.results != [])
  changed_when: no
  notify: Delete profile picture import file
  become: yes

- name: user_profile_picture_created
  debug:
    var: user_profile_picture_created
  when: verbose|bool

- name: apply the new picture only (if the import file has been created without failing)
  block:
  - name: Clear existing profile picture for the user "{{ new_user_username }}".
    command: 'dscl . delete /Users/{{ new_user_username }} {{ item }}'
    loop:
      - 'jpegphoto'
      - 'Picture'
    changed_when: no

  - name: Set the profile picture for the user "{{ new_user_username }}".
    command: dsimport "/Library/Caches/{{ new_user_username }}.picture.dsimport" /Local/Default M -u "${ new_user_username }"
    changed_when: no
  # end block
  when: not user_profile_picture_created.results[0].failed|default('no') | bool
  become: yes
